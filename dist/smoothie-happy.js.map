{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 138c310321fd791edd76","webpack:///./index.js","webpack:///./request.js","webpack:///./events.js","webpack:///./response.js"],"names":["Request","request","get","post","settings","url","trim","method","toUpperCase","data","Object","keys","map","encodeURIComponent","key","join","indexOf","substr","headers","timeout","undefined","_xhr","xhr","xhrOptions","XMLHttpRequest","_promise","_execute","Promise","resolve","reject","open","option","event","upload","LOAD_EVENT","onload","status","onerror","ontimeout","onabort","header","setRequestHeader","send","progressHandler","context","onprogress","lengthComputable","call","onFulfilled","onRejected","then","catch","RequestEvent","name","response","ProgressEvent","originalEvent","total","loaded","percent","parseInt","Response","responseText","responseXML","responseType","code","message","statusText","type","responseURL","xml","text","raw"],"mappings":"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","file":"./smoothie-happy.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SmoothieHappy\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SmoothieHappy\"] = factory();\n\telse\n\t\troot[\"SmoothieHappy\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 138c310321fd791edd76","export { Request, request, get, post } from './request';\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","import { RequestEvent, ProgressEvent } from './events';\n\n/**\n* `XMLHttpRequest` wrapper with `Promise` logic.\n*\n* @class\n* @param {Object}  settings                   Request settings.\n* @param {String}  settings.url               URL with protocol.\n* @param {String}  [settings.method  = 'GET'] 'GET', 'POST', 'DELETE', ...\n* @param {Mixed}   [settings.data    = null]  Data to send with the request.\n* @param {Object}  [settings.headers = null]  Headers to send with the request.\n* @param {Integer} [settings.timeout = 5000]  Timeout for this request in milliseconds.\n* @param {Object}  [settings.xhr     = null]  An `XMLHttpRequest` instance or an collection of `XMLHttpRequest` properties/methods to overwrite.\n* @see Please read {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise|this} and {@link https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html|that} to learn more about promises.\n*/\nclass Request {\n    constructor(settings) {\n        // default settings\n        settings = settings || {};\n\n        /**\n        * @property {String} - Request url.\n        * @default ''\n        * @readonly\n        */\n        this.url = (settings.url || '').trim();\n\n        /**\n        * @property {String} - Request method.\n        * @default 'GET'\n        * @readonly\n        */\n        this.method = (settings.method  || 'GET').trim().toUpperCase();\n\n        /**\n        * @property {Mixed} - Request data.\n        * @default null\n        * @readonly\n        */\n        this.data = settings.data || null;\n\n        // append data to url if not a POST method\n        if (this.method !== 'POST' && this.data) {\n            // stringify data object\n            if (typeof this.data === 'object') {\n                this.data = Object.keys(this.data).map(key => {\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(this.data[key]);\n                }).join('&');\n            }\n\n            // trim data string\n            this.data = this.data.trim();\n\n            // remove the first char if it is an '?'\n            if (this.data.indexOf('?') === 0) {\n                this.data = this.data.substr(1);\n            }\n\n            // append '?' or '&' to the uri if not already set\n            this.url += (this.url.indexOf('?') === -1) ? '?' : '&';\n\n            // append data to uri\n            this.url += this.data;\n\n            // reset data\n            this.data = null;\n        }\n\n        /**\n        * @property {Object} - Request headers.\n        * @default {}\n        * @readonly\n        */\n        this.headers = settings.headers || {};\n\n        /**\n        * @property {Integer} - Request timeout in milliseconds.\n        * @default 5000\n        * @readonly\n        */\n        this.timeout = settings.timeout === undefined ? 5000 : settings.timeout;\n\n        /**\n        * @property {XMLHttpRequest} - XMLHttpRequest instance.\n        * @protected\n        */\n        this._xhr = settings.xhr || null;\n\n        // create XMLHttpRequest instance\n        let xhrOptions = {};\n\n        if (! (this._xhr instanceof XMLHttpRequest)) {\n            // maybe properties/methods to overwrite\n            if (this._xhr && typeof this._xhr === 'object') {\n                xhrOptions = this._xhr;\n            }\n\n            // create http request object\n            this._xhr = new XMLHttpRequest();\n        }\n\n        /**\n        * @property {Promise} - Promise instance.\n        * @protected\n        */\n        this._promise = this._execute(xhrOptions);\n    }\n\n    /**\n    * Execute the request and return a Promise.\n    *\n    * @method\n    * @protected\n    * @param {Object} xhrOptions An object of `XMLHttpRequest` settings.\n    * @return {Promise}\n    */\n    _execute(xhrOptions) {\n        // create and return the Promise\n        return new Promise((resolve, reject) => {\n            // open the request (async)\n            this._xhr.open(this.method, this.url, true);\n\n            // overwrite properties/methods\n            for (let option in xhrOptions) {\n                if (option === 'upload') {\n                    for (let event in xhrOptions[option]) {\n                        if (this._xhr.upload[event] !== undefined) {\n                            this._xhr.upload[event] = xhrOptions[option][event];\n                        }\n                    }\n                }\n                else if (this._xhr[option] !== undefined) {\n                    this._xhr[option] = xhrOptions[option];\n                }\n            }\n\n            // force timeout\n            this._xhr.timeout = this.timeout;\n\n            // on load\n            let LOAD_EVENT = 'load';\n\n            this._xhr.onload = () => {\n                if (this._xhr.status >= 200 && this._xhr.status < 300) {\n                    resolve(new RequestEvent(LOAD_EVENT, this));\n                }\n                else {\n                    reject(new RequestEvent(LOAD_EVENT, this));\n                }\n            };\n\n            // on error\n            this._xhr.onerror = () => {\n                reject(new RequestEvent('error', this));\n            };\n\n            // on timeout\n            this._xhr.ontimeout = () => {\n                reject(new RequestEvent('timeout', this));\n            };\n\n            // on abort\n            this._xhr.onabort = () => {\n                reject(new RequestEvent('abort', this));\n            };\n\n            // on upload.load\n            this._xhr.upload.onload = () => {\n                LOAD_EVENT = 'upload.load';\n            };\n\n            // on upload.error\n            this._xhr.upload.onerror = () => {\n                reject(new RequestEvent('upload.error', this));\n            };\n\n            // on upload.timeout\n            this._xhr.upload.ontimeout = () => {\n                reject(new RequestEvent('upload.timeout', this));\n            };\n\n            // on upload.abort\n            this._xhr.upload.onabort = () => {\n                reject(new RequestEvent('upload.abort', this));\n            };\n\n            // set request headers\n            for (let header in this.headers) {\n                this._xhr.setRequestHeader(header, this.headers[header]);\n            }\n\n            // send the request\n            this._xhr.send(this.method === 'POST' ? this.data : null);\n        });\n    }\n\n    /**\n    * Register progress event handler.\n    *\n    * @method\n    * @param {Function} progressHandler An function receiving an {@link ProgressEvent} as first parameter.\n    * @param {Object}   [context]       The callback context\n    * @return {this}\n    */\n    onProgress(progressHandler, context) {\n        // register progress event\n        this._xhr.onprogress = event => {\n            if (event.lengthComputable) {\n                progressHandler.call(context || this, new ProgressEvent('progress', this, event));\n            }\n        };\n\n        // return the promise\n        return this;\n    }\n\n    /**\n    * Register upload progress event handler.\n    *\n    * @method\n    * @param {Function} progressHandler An function receiving an {@link ProgressEvent} as first parameter.\n    * @param {Object}   [context]       The callback context\n    * @return {this}\n    */\n    onUploadProgress(progressHandler, context) {\n        // register upload progress event\n        this._xhr.upload.onprogress = event => {\n            if (event.lengthComputable) {\n                progressHandler.call(context || this, new ProgressEvent('upload.progress', this, event));\n            }\n        };\n\n        // return the promise\n        return this;\n    }\n\n    /**\n    * Appends fulfillment and rejection handlers to the promise.\n    *\n    * @method\n    * @param {Function} onFulfilled Fulfillment callback.\n    * @param {Function} onRejected  Rejection callback.\n    * @return {Promise}\n    */\n    then(onFulfilled, onRejected) {\n        return this._promise.then(onFulfilled, onRejected);\n    }\n\n    /**\n    * Appends a rejection handler callback to the promise.\n    *\n    * @method\n    * @param {Function} onRejected Rejection callback.\n    * @return {Promise}\n    */\n    catch(onRejected) {\n        return this._promise.catch(onRejected);\n    }\n}\n\n/**\n* Make and return an `Request`.\n*\n* @function\n* @param {Object} settings Request settings. See {@link Request} for details.\n* @return {Request}\n*/\nlet request = function(settings) {\n    return new Request(settings);\n};\n\n/**\n* Make and return an GET `Request`.\n*\n* @function\n* @param {Object} settings Request settings. See {@link Request} for details.\n* @return {Request}\n*/\nlet get = function(settings) {\n    // defaults settings\n    settings = settings || {};\n\n    // force GET method\n    settings.method = 'GET';\n\n    // create and return the request\n    return new Request(settings);\n};\n\n/**\n* Make and return an POST `Request`.\n*\n* @function\n* @param {Object} settings Request settings. See {@link Request} for details.\n* @return {Request}\n*/\nlet post = function(settings) {\n    // defaults settings\n    settings = settings || {};\n\n    // force POST method\n    settings.method = 'POST';\n\n    // create and return the request\n    return new Request(settings);\n};\n\n// Exports\nexport default Request;\nexport { Request, request, get, post };\n\n\n\n// WEBPACK FOOTER //\n// ./request.js","import Response from './response';\n\n/**\n* Request event.\n*\n* @class\n* @param {String}             name    Event name, possible values is `[upload.]load`, `[upload.]timeout`, `[upload.]abort` or `[upload.]error`.\n* @param {Request} request Original `Request` instance.\n*/\nclass RequestEvent {\n    constructor(name, request) {\n        /**\n         * @property {String} - Possible values is `[upload.]load`, `[upload.]timeout`, `[upload.]abort` or `[upload.]error`.\n         * @readonly\n         */\n        this.name = name;\n\n        /**\n         * @property {Request} - Request instance.\n         * @readonly\n         */\n        this.request = request;\n\n        /**\n         * @property {Response} - Response instance.\n         * @readonly\n         */\n        this.response = new Response(request._xhr);\n\n        /**\n         * @property {Object|null} - Arbitrary data.\n         * @readonly\n         */\n        this.data = null;\n    }\n}\n\n/**\n* Custom progress event.\n*\n* @class\n* @extends RequestEvent\n* @param {String}             name    Event name, possible values is `progress` or `upload.progress`.\n* @param {Request} request Original `Request`.\n* @param {ProgressEvent}      event   Original `ProgressEvent`.\n*/\nclass ProgressEvent extends RequestEvent {\n    constructor(name, request, event) {\n        // call parent constructor\n        super(name, request);\n\n        /**\n         * @property {String} - Possible values is `progress` or `upload.progress`.\n         * @readonly\n         */\n\n        /**\n         * @property {ProgressEvent} - `ProgressEvent` instance.\n         * @readonly\n         */\n        this.originalEvent = event;\n\n        /**\n         * @property {Object|null} data         Progress data or null if not computable.\n         * @property {Integer}     data.total   Total bytes.\n         * @property {Integer}     data.loaded  Loaded bytes.\n         * @property {Integer}     data.percent Loaded percent.\n         * @readonly\n         */\n        this.data = ! event.lengthComputable ? null : {\n            total  : event.total,\n            loaded : event.loaded,\n            percent: parseInt(event.loaded / event.total * 100)\n        };\n    }\n}\n\n// Exports\nexport { RequestEvent, ProgressEvent };\n\n\n\n// WEBPACK FOOTER //\n// ./events.js","/**\n* XMLHttpRequest response abstraction class.\n*\n* @class\n* @param {XMLHttpRequest} xhr An `XMLHttpRequest` instance.\n*/\nclass Response {\n    constructor(xhr) {\n        // text/xml response available ?\n        var responseText = null;\n        var responseXML  = null;\n\n        if (xhr.responseType === '' || xhr.responseType === 'document') {\n            responseText = xhr.responseText;\n            responseXML  = xhr.responseXML;\n        }\n\n        /**\n         * @property {Integer} - Response status code.\n         * @readonly\n         */\n        this.code = xhr.status;\n\n        /**\n         * @property {String} - Respons status text.\n         * @readonly\n         */\n        this.message = xhr.statusText;\n\n        /**\n         * @property {String} - Response type.\n         * @readonly\n         */\n        this.type = xhr.responseType;\n\n        /**\n         * @property {String} - Response url.\n         * @readonly\n         */\n        this.url = xhr.responseURL;\n\n        /**\n         * @property {String} - Response XML.\n         * @readonly\n         */\n        this.xml = responseXML;\n\n        /**\n         * @property {String} - Response text.\n         * @readonly\n         */\n        this.text = responseText;\n\n        /**\n         * @property {Mixed} - Raw response.\n         * @readonly\n         */\n        this.raw = xhr.response;\n    }\n}\n\n// Exports\nexport default Response;\nexport { Response };\n\n\n\n// WEBPACK FOOTER //\n// ./response.js"],"sourceRoot":""}